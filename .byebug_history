c
n
c
n
c
n
@review
continue
 @services_with_reviews
n
@booked_services_without_reviews
c
n
c
Service.joins(:reviews).where(user_id: current_user.id, services: { status: 'sold' }, reviews: { id: nil })
@booked_services_without_reviews = Service.joins(:reviews)
c
@booked_services_without_reviews = Service.joins(:reviews).where(user_id: 3, status: 'sold', reviews: { id: nil })
@booked_services_without_reviews = Service.joins(:reviews).where(user_id: current_user.id, status: 'sold', reviews: { id: nil })
continue
current_user.bookings.includes(:service).where(status: 'sold')
@booked_services = current_user.bookings.includes(:service).where(status: 'sold')
c
C
c
@service
c
unless @service
@service
@service = Service.find_by(id: params[:service_id])
c
Service.find_by(id: params[:service_id])
c
@service.id
params
      @service = Service.find(params[:id])
n
c
params[:status].in?(Service.statuses.keys)
 service_params[:status].in?(Service.statuses.keys)
c
n
c
params
 service_params
 service_params[:status]
 service_params[:status].in?
 service_params[:status].in?(Service.statuses.keys)
c
n
params
c
n
@service = Service.find(params[:id])
c
params[:status]
param[:status]
status
service_params[:status].in?(Service.statuses.keys)
(Service.statuses.keys)
service_params[:status].in?(Service.statuses.keys)
service_params
params
service_params[:status].in?
n
c
n
category_params
